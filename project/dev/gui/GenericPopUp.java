/*
 * Proyect:     ERMON.
 * File:        GenericPopUp.java
 * Description: Implements a generic pop-up window to show textual information
 *              about the events being scheduled.
 * Java:        JDK 7
 * Contact:     Alberto Martin Cajal <amartin.glimpse23@gmail.com>
 * Website:     https://github.com/amcajal/ermon
 * Copyrigth:   GNU General Public License, version 3.0.
 *
 * ERMON is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ERMON is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ERMON.  If not, see <http://www.gnu.org/licenses/>.
*/

package gui;

/* Graphic elements. */
import java.awt.BorderLayout;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/*
 * CAPTION:
 * - SXE: Single eXecution Events.
 * - PXE: Periodical eXecution Events.
*/

/**
 * Implements the generic pop-up window.
 * 
 * The generic pop-up window will show textual information about the events.
 * Depends on the parameters, the pop-up will show:
 * - SXE and PXE.
 * - Executed SXE.
 * - PXE currently in progress.
*/
public class GenericPopUp extends javax.swing.JFrame {
    /* CLASS VARIABLES */
    
    /**
     * Panel showing information about Periodical Execution Events.
    */
    JComponent pxeInfoPanel;
    
    /**
     * Text area attached to the pxeInfoPanel.
    */
    JTextArea pxeTextArea;

    /**
     * Scroll panel for pxeTextArea
    */
    JScrollPane pxeScrollPanel;
    
    /**
     * Panel showing information about Single Execution Events.
    */
    JComponent sxeInfoPanel;
    
    /**
     * Text area attached to the sxeInfoPanel.
    */
    JTextArea sxeTextArea;

    /**
     * Scroll panel for sxeTextArea
    */
    JScrollPane sxeScrollPanel;

    /* CONSTRUCTORS*/

    /**
     * Default constructor.
    */
    public GenericPopUp() {
        initComponents();    /* Autogenerated method. */

        pxeInfoPanel= new JPanel();
        sxeInfoPanel = new JPanel();
        
        /*
         * Set layout for both panels.
         * This will make the attached textAreas to fill all the space.
        */        
        pxeInfoPanel.setLayout(new BorderLayout());
        sxeInfoPanel.setLayout(new BorderLayout());

        pxeTextArea = new JTextArea();
        sxeTextArea = new JTextArea();

        pxeTextArea.setEditable(false);
        pxeTextArea.setLineWrap(true);
        
        sxeTextArea.setEditable(false);
        sxeTextArea.setLineWrap(true);

        /* Add text areas to the scroll panel. */
        pxeScrollPanel = new JScrollPane (pxeTextArea);
        sxeScrollPanel = new JScrollPane (sxeTextArea);

        /* Add scrollPanels to proper panel */
        pxeInfoPanel.add(pxeScrollPanel);
        sxeInfoPanel.add(sxeScrollPanel);

        /* Add the panels to the tabPanel, in order to create the tabs */
        this.tabPanel.addTab("PERIODICAL EXECUTION EVENTS", null, 
            pxeInfoPanel, null);
        this.tabPanel.addTab("SINGLE EXECUTION EVENTS", null,
            sxeInfoPanel, null);
        
        this.tabPanel.setSelectedIndex(0); /* PXE is showed by default. */
    }

    /**
     * Creates a pop-up with information about SXE already printed in it.
     * 
     * @param sxeInProgressInfo SXE information to be printed.
    */
    public GenericPopUp (String sxeInProgressInfo) {
        initComponents();

        sxeInfoPanel = new JPanel();
        sxeInfoPanel.setLayout(new BorderLayout());
        sxeTextArea = new JTextArea();
        sxeInfoPanel.add(sxeTextArea);
        sxeTextArea.setText(sxeInProgressInfo);    /* Print the information. */
        this.tabPanel.addTab("SINGLE EXECUTION EVENTS", null,
            sxeInfoPanel, null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPanel = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Event information pop-up");
        setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /* GETTERS AND SETTERS */

    /**
     * Sets the information about PXE to be printed.
     * 
     * @param toDo PXE information to be printed.
    */
    public void setPXEInfo(String toDo) {
        this.pxeTextArea.setText(toDo);
    }

    /**
     * Sets the information about SXE to be printed.
     * 
     * @param toDo SXE information to be printed.
    */
    public void setSXEInfo(String toDo) {
        this.sxeTextArea.setText(toDo);
    }
    
    /**
     * Sets the default tab to be selected when pop-up is shown.
     * 
     * The tab of PXE is always showed when the pop-up is opened.
    */
    public void setDefaultTab() {
        this.tabPanel.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane tabPanel;
    // End of variables declaration//GEN-END:variables

}
